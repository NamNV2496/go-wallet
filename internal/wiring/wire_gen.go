// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wiring

import (
	"github.com/namnv2496/go-wallet/api"
	"github.com/namnv2496/go-wallet/config"
	"github.com/namnv2496/go-wallet/internal/app"
	"github.com/namnv2496/go-wallet/internal/databaseaccess"
	"github.com/namnv2496/go-wallet/internal/logic"
	"github.com/namnv2496/go-wallet/internal/token"
)

// Injectors from wire.go:

// func Initialize(path string) (*database.Database, error) {
func Initialize(path string) (*app.App, error) {
	configConfig, err := config.LoadAllConfig(path)
	if err != nil {
		return nil, err
	}
	database := databaseaccess.NewDatabase(configConfig)
	maker, err := token.NewPasetoMaker(configConfig)
	if err != nil {
		return nil, err
	}
	accountLogic, err := logic.NewAccountLogic(database)
	if err != nil {
		return nil, err
	}
	userLogic, err := logic.NewUserLogic(database)
	if err != nil {
		return nil, err
	}
	transerLogic, err := logic.NewtranserLogic(database)
	if err != nil {
		return nil, err
	}
	server, err := api.NewGinServer(maker, accountLogic, userLogic, transerLogic)
	if err != nil {
		return nil, err
	}
	appApp := app.NewApp(database, server)
	return appApp, nil
}
